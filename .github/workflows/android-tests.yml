name: Android CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Install Android SDK components
        run: |
          yes | sdkmanager --licenses
          sdkmanager \
            "platform-tools" \
            "emulator" \
            "platforms;android-30" \
            "system-images;android-30;google_apis;x86_64"

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Run unit tests
        run: ./gradlew testDebugUnitTest

      - name: Build APKs for instrumentation tests
        run: ./gradlew assembleDebug assembleDebugAndroidTest

      - name: Create AVD and launch emulator
        run: |
          echo "no" | avdmanager create avd -n test -k "system-images;android-30;google_apis;x86_64" --device "pixel"
          emulator -avd test -no-window -no-audio -no-boot-anim -accel auto &
          adb wait-for-device
          adb shell settings put global window_animation_scale 0
          adb shell settings put global transition_animation_scale 0
          adb shell settings put global animator_duration_scale 0
          adb shell input keyevent 82
        timeout-minutes: 10

      - name: Run instrumented tests
        run: ./gradlew connectedDebugAndroidTest

      - name: Debug test directories
        if: always()
        run: |
          if [ -d "app/build" ]; then
            ls -R app/build
          else
            echo "No build directory found"
          fi

      - name: Upload Android Test Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: android-instrumented-test-report
          path: |
            app/build/reports/androidTests/connected/
            app/build/outputs/androidTest-results/connected/
